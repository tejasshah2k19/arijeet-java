what is class ? 

Laptop 
IPhone
	Iphone13

Person
	DhirajSir 


class -> logic , group , generalize 
object -> physical , member , specialized 


class -> 
	1) data member    - variable 
	2) member function - method 

object is going to access property of a class. 

-------------------------------------------------------------------------
data type 

1) primitive 
			byte:	1 byte -128 to 127   
			short:  2 byte
			char:   2 byte [ UNICODE ]  
			int:    4 byte 
			long:   8 byte 
			float:  4 byte  
			double: 8 byte  
			boolean: 1 bit [ true false ] 
			 
2) non primitive
			class , object , enum , array 
			

 
---------------------------------------------------------------------------------
types of variable 
1)  instance variable 
2)  static variable 
3)  local variable 

------------------------------------------------------------------------------
constructor :- is a special method which has a same name as class name 
			   it must not have any return type. 
				
			   is used to initialize instance variable. 

1)  implicit constructor
2)  explicit constructor 
        * default - no arg 
        * parameterized
------------------------------------------------------------------------------
student : name and marks of three subjects 
           percentage 
           
           print all data      
           input()
           calcPercentage()
           printData() 
             
------------------------------------------------------------------------------
cohesion ->  limited knowledge 
coupling ->  A -> B
------------------------------------------------------------------------------

String -> 
		class 
		string -> character array 
		collection characters   
	


String s = "royal";   // s => character array 0:r 1:o 2:y 3:a 4:l 
	
S.o.p(s); 


1) take 1 string from user and count vowels.
2) count total upper case letter in string. 

3) create login method that ask email and password to the user 
 		check email must be admin@gmail.com and 
 		password must be pass123 
 		if both data is correct then print correct info
 		otherwise print invalid credentials. 
 		
4) take 1 string from user with multiple words , count the word from that string. 
	e.g 
		enter string 
		jony jony yes papa 
		string contains 4 words 
		

string immutable -> operation -> not perform on self 

2) word 
	jony jony yes papa 
	
	ynoy
	jnoj
	sey
	apap 
	

StringBuffer [ 5 ] 
	sync - turn by turn - bank 
StringBuilder [ 5 ] 
	non sync - all at once 

---------------------------------------------------

array -> 
	two addition -> a , b 
	3 num -> a  b c 
	15 num -> 
	
	collection of multiple data items [ values ] , having same type of data type. 
	
	
	
	1) take array 5 numbers and find out sum of all numbers , min and max. 
	
	1D 
	2D 
	MD 
	
	int a[][][] = new int[3][3][3]; 
	
	Ragged Jagged  - Array of Array 
	
	
-----------------------------------------------------------
inheritance :- 
			class A  add()
			objA -> add()
			
			class B  sub() 
			objB -> sub()
			objB -> add() 
			
			object of one class can access property of another class 
			Giver -> Parent -> Super -> Base 
			Taker -> Child -> Sub -> Derived 
			
			extends keyword is used to achieve inheritance.
			
			5 type inheritance 
			
			
	
	this -> current instance / object 
	super -> parent  -> using super keyword we can access property of
					    parent class. 
	
	
overloading -> method having same name with different args 
overridding ->	parent - child both have method with same signature 


----------------------------------------------------------------------------------
abstract class -
interface - pure abstract class 



abstract class 				vs 				interface 

variable non final					all variables are final by default 
both method we can 
	abstract and non abstract		we can only have abstract method 
	
	
	
similar -> abstract class and interface both can't be instantiate.

class -> interface -> class implements interface 
class -> class  -> class extends class 
interface -> interface -> interface extends interface 

interface -> class -> not possible 

we can achieve multiple inheritance using interface 

-------------------------------------------------------------------------

abstract -> class , method 
final -> variable , class , method 

-------------------------------------------------

package -> folder -> movie 
						hollywood
								hindi  eng 
						bollywood
	classes => package -> 
		
		lang -> String ,System , Math , [ import java.lang.* ] 
		util -> Scanner , Date , Calendar , 
		io -> File , FileOutputStream , FileInputStream ,PrintWriter 
		applet -> Applet , Graphic 
									 
user define :- 

	
	packA			packD
	A				 D
	B				 E extends A  
	C extends A
	
					private			default 		protected 			public 
		A			  Y				   Y				Y				   Y 
		
		B[objA]		  N				   Y				Y				   Y
		objB		  N				   N			    N				   N		  
		
		
		C[obj]		  N				   Y				Y				   Y
		aObj		  N				   Y				Y				   Y
		
				
				
		D[objA]		  N				   N 				N				   Y
		
		
		E[objE]	 	  N				   N				Y				   Y 	
	

method , variable ---> private default protected public
class			---> default , public 
 
--------------------------------------------------------------------------------------------------

class - encapsulation 


variable -> private , protected 
	getters setters public 
	
	
is a -> inheritance [ Dzire extends Car -> Dzire is a Car ] 
has a -> property [ Dzire int gear -> Dzire has a gear ] 

int a; //4 byte 

stack -- local variable - short term - temp 
		  function - method 
		 local variable is known as stack variable 
		 
heap -> long term storage 
		 object -> instance variable , static variable 
		 array  enum
		 
		 "" -> string pool
		 

=> 10 -> decimal 
=> 010 -> octal 
=> 0x12 0X23 -> hexa 
=> 0b111 -> binary 


String str = "royal";//string pool 
String x ="royal" 
String s = new String("royal");
int a =90 ;

obj-> bal =25000;


who is going to deallocate all memory ! free ?

System.gc();

local -> obj =null  -> graph 




public void finalize(){
	obj = null;
}
------------------------------------------------------------

constructor -> 

static block 
instance init. block 
------------------------------------------------
try - code 
hit - true
throw - object [ exception class  ] 
catch - handler -> 


java 7 -> 1) close 
		  2) try...catch 


try -> auto resource collection 

try(Scanner scr = new Scanner(System.in)){


}
custom exception -google api demo 
------------------------------------------------

assert 1.4 , 4

int assert;// 3 1.3 

royal ->

StringBuffer -> synchronized 

--------------------------------

royal123education@45ahmedabad23

tejas@gmail.com

079-12345678

9999-999-9999

Pattern Matcher 

----------------------------
abaaaba
0123456

ab

0
4
-------------------------------------------------------
				Collection
				
	List 			Queue		Set       |     Map 
	ArrayList 
	Vector[synchronized]
	thread safe 
	
	 


























	